{"version":3,"sources":["fetchAPI.js","App.js","reportWebVitals.js","index.js"],"names":["getStates","a","requestOptions","method","fetch","res","ok","json","then","data","console","log","states","getDistricts","stateID","URLDistrictList","results","districts","getSlots","ID","date","URL","centers","useStyles","makeStyles","theme","root","margin","spacing","top","display","flexDirection","minWidth","selectStyle","width","wrapper","alignItems","paddingTop","height","colorCorrectAnswer","backgroundColor","padding","borderRadius","color","App","classes","audio","Audio","useState","stateName","setStateName","districtName","setDistrictName","stateCode","setStateCode","districtCode","setDistrictCode","stateList","setStateList","districtList","setDistrictList","slotsList","setSlotsList","doseChoice","setDoseChoice","open","setOpen","useEffect","listOfStates","fetchData","listOfDistricts","fetchDistricts","displaySlots","centername","freeSlots","forEach","item","sessions","val","dose","_","isEqual","available_capacity_dose1","available_capacity_dose2","name","obj","openSlots","centerName","slotDate","vaccine","push","isEmpty","style","marginTop","fontSize","Typography","variant","play","TableContainer","component","Paper","opacity","overflowY","Table","size","stickyHeader","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","index","toString","fetchSlots","listOfSlots","moment","format","interval","setInterval","clearInterval","className","FormControl","InputLabel","Select","value","onChange","event","target","find","state_name","state_id","MenuProps","MenuItem","districtID","district_name","district_id","Snackbar","anchorOrigin","vertical","horizontal","message","action","IconButton","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83b3db8d.chunk.js","sourcesContent":["const URLStates = \"https://cdn-api.co-vin.in/api/v2/admin/location/states\";\r\n\r\nexport const getStates = async() =>{\r\n    const requestOptions={\r\n    method: \"GET\"\r\n}\r\n    const res = await fetch(URLStates,requestOptions);\r\n    if(res.ok)\r\n    {\r\n        return res.json().then(data=>{\r\n            console.log(data.states);\r\n            return data.states;\r\n        })\r\n    }\r\n}\r\n\r\nexport const getDistricts = async(stateID)=>{\r\n    const requestOptions={\r\n        method: \"GET\"\r\n    }\r\n    const URLDistrictList = `https://cdn-api.co-vin.in/api/v2/admin/location/districts/`+stateID;\r\n    const results = await fetch(URLDistrictList,requestOptions);\r\n    if(results.ok)\r\n    {\r\n        return results.json().then(res=>{\r\n            console.log(res.districts);\r\n            return res.districts;\r\n        })\r\n    }\r\n}\r\n\r\nexport const getSlots = async(ID,date) => {\r\n    const requestOptions={\r\n        method: \"GET\"\r\n    };\r\n    const URL = `https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict?district_id=`+ID+`&date=`+date;\r\n    const results = await fetch(URL, requestOptions);\r\n    if(results.ok)\r\n    {\r\n        return results.json().then(res=>{\r\n            console.log(res.centers);\r\n            return res.centers;\r\n        })\r\n    }\r\n}\r\n","import './App.css';\nimport { Select, MenuItem, Typography, FormControl, makeStyles, Paper, TableRow, TableCell, Table, TableHead,TableBody, TableContainer, InputLabel, Snackbar, IconButton} from \"@material-ui/core\";\nimport { useEffect, useState } from 'react';\nimport {getStates, getDistricts, getSlots} from \"./fetchAPI\";\nimport moment from \"moment\";\nimport _ from \"underscore\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ErrorIcon from '@material-ui/icons/Error';\n\nconst useStyles = makeStyles(theme=>({\n  root:{\n    margin: theme.spacing(1),\n    top:\"50px\",\n    display:\"flex\",\n    flexDirection:\"row\",\n    minWidth:\"fit-content\"\n  },\n  selectStyle:{\n    width:\"300px\"\n  },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    paddingTop: \"50px\",\n    height: \"85vh\"\n  },\n  colorCorrectAnswer:{\n    backgroundColor: \"#92F7BA\",\n    padding: \"15px\",\n    borderRadius: \"7px\",\n    color: \"#474747\"\n  },\n}))\nfunction App() {\n  const classes = useStyles();\n  let audio = new Audio(\"https://media.geeksforgeeks.org/wp-content/uploads/20190531135120/beep.mp3\");\n  const [stateName, setStateName] = useState(\"\");\n  const [districtName, setDistrictName] = useState(\"\");\n  const [stateCode, setStateCode] = useState(0);\n  const [districtCode, setDistrictCode] = useState(0);\n  const [stateList, setStateList] = useState([]);\n  const [districtList, setDistrictList] = useState([]);\n  const [slotsList, setSlotsList] = useState([]);\n  const [doseChoice, setDoseChoice] = useState(\"\");\n  const [open, setOpen] = useState(true);\n  const vertical='bottom';const horizontal='center';\n\n  useEffect(()=>{\n    async function fetchData(){\n      const listOfStates = await getStates();\n      setStateList(listOfStates);\n    }\n    fetchData();\n  }, []);\n\n  useEffect(()=>{\n    const fetchDistricts=async(ID)=>{\n      const listOfDistricts = await getDistricts(ID);\n      setDistrictList(listOfDistricts);\n    }\n    fetchDistricts(stateCode);\n  }, [stateCode]);\n\n  const displaySlots = ()=>{\n    let centername; let sessions=[]; let freeSlots=[] ;\n    slotsList.forEach(item=>{\n      sessions = item.sessions;\n      sessions.forEach(val=>{\n        let dose = _.isEqual(doseChoice,\"dose1\") ? val.available_capacity_dose1 : val.available_capacity_dose2;\n        if(dose > 0)\n          {\n            centername = item.name;\n            let obj={openSlots:0,centerName:\"\",slotDate:\"\",vaccine:\"\"};\n            obj.openSlots = dose;\n            obj.centerName = centername;\n            obj.slotDate = val.date;\n            obj.vaccine = val.vaccine;\n            freeSlots.push(obj);\n          }\n      })\n    })\n    if(!_.isEmpty(freeSlots)){\n      audio.play();\n      return(\n        <TableContainer component={Paper} style={{marginTop: \"60px\",\n          width: \"650px\",\n          height: \"420px\",\n          opacity: \"0.87\",\n          overflowY: \"auto\"}}>\n        <Table size=\"medium\" stickyHeader aria-label=\"sticky table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Center Name</TableCell>\n            <TableCell align=\"left\">Open Slots</TableCell>\n            <TableCell align=\"left\">Slot Dates&nbsp;</TableCell>\n            <TableCell align=\"left\">Vaccine&nbsp;</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        {freeSlots.map((item,index)=>{\n          return (<TableRow key={index.toString()}>\n            <TableCell>{item.centerName}</TableCell>\n            <TableCell>{item.openSlots}</TableCell>\n            <TableCell>{item.slotDate}</TableCell>\n            <TableCell>{item.vaccine}</TableCell>\n            </TableRow>\n          )\n        })\n      }\n        </TableBody>\n      </Table>\n      </TableContainer>\n      )\n    }\n    else\n    return (\n      <div style={{display:\"flex\",marginTop: \"100px\"}}>\n        <ErrorIcon fontSize=\"medium\" style={{width:\"4.5rem\" ,height:\"2.5rem\", color:\"crimson\"}}/>\n        <Typography variant=\"h4\">No Slots Found</Typography>\n    </div>\n    )\n  }\n\n  useEffect(()=>{\n    const fetchSlots = async(ID,date) => {\n      const listOfSlots = await getSlots(ID,date);\n      setSlotsList(listOfSlots);\n    }\n    let date = moment().format('DD-MM-YYYY');\n    fetchSlots(districtCode,date);\n    const interval = setInterval(() => fetchSlots(districtCode,date), 60000)\n        return () => {\n          clearInterval(interval);\n        }\n  }, [districtCode]);\n\n  const handleStateSelect = (event) =>{\n     setStateName(event.target.value);\n     let stateID = stateList.find(item=>item.state_name===event.target.value).state_id;\n     setStateCode(stateID);\n  }\n\n  const handleDistrictSelect = (event) => {\n    setDistrictName(event.target.value);\n    let districtID = districtList.find(item=> item.district_name===event.target.value).district_id;\n    setDistrictCode(districtID);\n    displaySlots();\n  }\n\n  const handleDoseSelect = (event) => {\n    setDoseChoice(event.target.value);\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className={classes.wrapper}>\n        <Typography variant=\"h3\">Cowin Slot Finder</Typography>\n        <div style={{display:\"flex\"}}>\n        <FormControl variant=\"outlined\" className={classes.root}>\n        {stateList && (\n          <>\n          <InputLabel style={{top:\"-6px\"}}>Select your state</InputLabel>\n          <Select variant=\"outlined\" \n            className={classes.selectStyle} \n            value={stateName} \n            onChange={handleStateSelect}\n            MenuProps={{\n              style: {top:\"50px\",height:\"350px\"}\n            }}\n          >\n          {\n            stateList.map((item,index)=>(\n              <MenuItem value={item.state_name} key={index.toString()}>{item.state_name}</MenuItem>\n            ))\n          }\n        </Select>\n        </>\n        )\n        }\n        </FormControl>\n        <FormControl variant=\"outlined\" className={classes.root}>\n        {stateName && districtList && (\n          <>\n          <InputLabel style={{top:\"-6px\"}}>Select your district</InputLabel>\n          <Select variant=\"outlined\" \n            className={classes.selectStyle} \n            value={districtName} \n            onChange={handleDistrictSelect}\n            MenuProps={{\n              style: {top:\"50px\",height:\"350px\"}\n            }}\n          >\n          {\n            districtList.map((item,index)=>(\n              <MenuItem \n                value={item.district_name} \n                key={index.toString()}\n              >\n                {item.district_name}\n              </MenuItem>\n            ))\n          }\n        </Select>\n        </>\n        )\n        }\n        </FormControl><FormControl variant=\"outlined\" className={classes.root}>\n        {stateName && districtList && (\n          <>\n          <InputLabel style={{top:\"-6px\"}}>Select your dose</InputLabel>\n          <Select variant=\"outlined\" \n            className={classes.selectStyle} \n            value={doseChoice} \n            onChange={handleDoseSelect}\n            MenuProps={{\n              style: {top:\"50px\",height:\"350px\"}\n            }}\n          >\n          <MenuItem value={'dose1'}>DOSE 1</MenuItem>\n          <MenuItem value={'dose2'}>DOSE 2</MenuItem>\n        </Select>\n        </>\n        )\n        }\n        </FormControl>\n        </div>\n        {!_.isEmpty(slotsList) && !_.isEmpty(doseChoice) && displaySlots()}\n      </div>\n      <Snackbar\n        open={open}\n        anchorOrigin={{vertical, horizontal}}\n        message=\"Data is refreshed every 1 minute\"\n        action={\n          <IconButton color=\"inherit\" size=\"small\" onClick={handleClose}>\n            <CloseIcon fontSize=\"small\"/>\n          </IconButton>\n        }\n      >\n      </Snackbar>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}