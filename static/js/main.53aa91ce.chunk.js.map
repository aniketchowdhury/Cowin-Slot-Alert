{"version":3,"sources":["fetchAPI.js","App.js","reportWebVitals.js","index.js"],"names":["getStates","a","requestOptions","method","fetch","res","ok","json","then","data","states","getDistricts","stateID","URLDistrictList","results","districts","getSlots","ID","date","URL","centers","useStyles","makeStyles","theme","root","margin","spacing","top","display","flexDirection","minWidth","selectStyle","width","wrapper","alignItems","paddingTop","height","colorCorrectAnswer","backgroundColor","padding","borderRadius","color","App","classes","audio","Audio","useState","stateName","setStateName","districtName","setDistrictName","stateCode","setStateCode","districtCode","setDistrictCode","stateList","setStateList","districtList","setDistrictList","slotsList","setSlotsList","doseChoice","setDoseChoice","open","setOpen","toggleAudio","setAudio","textMessageWhatsapp","setWhatsapp","useEffect","listOfStates","document","title","fetchData","listOfDistricts","fetchDistricts","displaySlots","centername","str","freeSlots","whatsappMessage","forEach","item","sessions","val","dose","_","isEqual","available_capacity_dose1","available_capacity_dose2","name","obj","openSlots","centerName","slotDate","vaccine","pincode","push","isEmpty","style","marginTop","fontSize","Typography","variant","play","window","TableContainer","component","Paper","opacity","overflow","Table","size","stickyHeader","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","index","toString","fetchSlots","listOfSlots","moment","format","interval","setInterval","clearInterval","handleToggle","event","target","checked","downloadCert","e","shareWhatsApp","className","justifyContent","flexWrap","FormControl","InputLabel","Select","value","onChange","find","state_name","state_id","MenuProps","MenuItem","disabled","districtID","district_name","district_id","Switch","data-testid","onClick","IconButton","paddingBottom","WhatsappIcon","Button","Snackbar","anchorOrigin","vertical","horizontal","message","action","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"yYAEaA,EAAS,uCAAG,8BAAAC,EAAA,6DACfC,EAAe,CACrBC,OAAQ,OAFa,SAIHC,MANJ,yDAMoBF,GAJb,YAIfG,EAJe,QAKdC,GALc,yCAOVD,EAAIE,OAAOC,MAAK,SAAAC,GACnB,OAAOA,EAAKC,WARC,2CAAH,qDAaTC,EAAY,uCAAG,WAAMC,GAAN,mBAAAX,EAAA,6DAClBC,EAAe,CACjBC,OAAQ,OAENU,EAAkB,6DAA6DD,EAJ7D,SAKFR,MAAMS,EAAgBX,GALpB,YAKlBY,EALkB,QAMbR,GANa,yCAQbQ,EAAQP,OAAOC,MAAK,SAAAH,GACvB,OAAOA,EAAIU,cATK,2CAAH,sDAcZC,EAAQ,uCAAG,WAAMC,EAAGC,GAAT,mBAAAjB,EAAA,6DACdC,EAAe,CACjBC,OAAQ,OAENgB,EAAM,+FAA+FF,EAA/F,SAA2GC,EAJnG,SAKEd,MAAMe,EAAKjB,GALb,YAKdY,EALc,QAMTR,GANS,yCAQTQ,EAAQP,OAAOC,MAAK,SAAAH,GACvB,OAAOA,EAAIe,YATC,2CAAH,wD,2ECnBfC,EAAYC,aAAW,SAAAC,GAAK,MAAG,CACnCC,KAAK,CACHC,OAAQF,EAAMG,QAAQ,GACtBC,IAAI,OACJC,QAAQ,OACRC,cAAc,MACdC,SAAS,eAEXC,YAAY,CACVC,MAAM,SAERC,QAAS,CACPL,QAAS,OACTC,cAAe,SACfK,WAAY,SACZC,WAAY,OACZC,OAAQ,QAEVC,mBAAmB,CACjBC,gBAAiB,UACjBC,QAAS,OACTC,aAAc,MACdC,MAAO,eA0RIC,MAvRf,WACE,IAAMC,EAAUtB,IACZuB,EAAQ,IAAIC,MAAM,8EACtB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAkCJ,mBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAwCN,mBAAS,GAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAAkCR,mBAAS,IAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KACA,EAAwCV,mBAAS,IAAjD,mBAAOW,GAAP,KAAqBC,GAArB,KACA,GAAkCZ,mBAAS,IAA3C,qBAAOa,GAAP,MAAkBC,GAAlB,MACA,GAAoCd,mBAAS,IAA7C,qBAAOe,GAAP,MAAmBC,GAAnB,MACA,GAAwBhB,oBAAS,GAAjC,qBAAOiB,GAAP,MAAaC,GAAb,MACA,GAAgClB,oBAAS,GAAzC,qBAAOmB,GAAP,MAAoBC,GAApB,MACA,GAA2CpB,oBAAS,GAApD,qBAAOqB,GAAP,MAA4BC,GAA5B,MAGAC,qBAAU,WAAI,4CAEZ,4BAAApE,EAAA,sEAC6BD,IAD7B,OACQsE,EADR,OAEEd,EAAac,GAFf,4CAFY,sBACZC,SAASC,MAAQ,mBADL,mCAMZC,KACC,IAEHJ,qBAAU,YACY,uCAAC,WAAMpD,GAAN,eAAAhB,EAAA,sEACWU,EAAaM,GADxB,OACbyD,EADa,OAEnBhB,GAAgBgB,GAFG,2CAAD,sDAIpBC,CAAexB,KACd,CAACA,IAEJ,IAQMyB,GAAe,WACnB,IAAIC,EATuBC,EASUC,EAAU,GAC3CC,EAAkB,GAuBtB,OAtBArB,GAAUsB,SAAQ,SAAAC,GACLA,EAAKC,SACPF,SAAQ,SAAAG,GACf,IAAIC,EAAOC,IAAEC,QAAQ1B,GAAW,SAAWuB,EAAII,yBAA2BJ,EAAIK,yBAC9E,GAAGJ,EAAO,EACR,CACER,EAAaK,EAAKQ,KAClB,IAAIC,EAAI,CAACC,UAAU,EAAEC,WAAW,GAAGC,SAAS,GAAGC,QAAQ,GAAGC,QAAQ,IAClEL,EAAIC,UAAYP,EAChBM,EAAIE,WAAahB,EACjBc,EAAIG,SAAWV,EAAIlE,KACnByE,EAAII,QAAUX,EAAIW,QAClBJ,EAAIK,QAAUd,EAAKc,QACnBhB,GAAmB,iBAAiBH,EAAjB,YACLQ,EADK,WAERD,EAAIlE,KAFI,mBAGAkE,EAAIW,QAHJ,cAILb,EAAKc,QAJA,SAKnBjB,EAAUkB,KAAKN,UAInBL,IAAEY,QAAQnB,GAsCZ,sBAAKoB,MAAO,CAACvE,QAAQ,OAAOwE,UAAW,SAAvC,UACE,cAAC,IAAD,CAAWC,SAAS,SAASF,MAAO,CAACnE,MAAM,SAAUI,OAAO,SAAUK,MAAM,aAC5E,cAAC6D,EAAA,EAAD,CAAYC,QAAQ,KAApB,gCAvCFtC,IAAerB,EAAM4D,OACrBrC,KAnCyBW,EAmCmBE,EAlC3CM,IAAEC,QAAQpB,IAAoB,KAE/BsC,OAAO1C,KAAK,sCAAsCe,GAClDV,IAAY,KAiCV,cAACsC,EAAA,EAAD,CAAgBC,UAAWC,IAAOT,MAAO,CACvCnE,MAAO,OACPI,OAAQ,OACRyE,QAAS,OACTC,SAAU,QAJZ,SAKA,eAACC,EAAA,EAAD,CAAOC,KAAK,SAASC,cAAY,EAACC,aAAW,eAA7C,UACA,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,0BACA,cAACA,EAAA,EAAD,CAAWC,MAAM,OAAjB,0BACA,cAACD,EAAA,EAAD,CAAWC,MAAM,OAAjB,wBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,OAAjB,4BACA,cAACD,EAAA,EAAD,CAAWC,MAAM,OAAjB,8BAGJ,cAACC,EAAA,EAAD,UACCxC,EAAUyC,KAAI,SAACtC,EAAKuC,GACnB,OAAQ,eAACL,EAAA,EAAD,WACN,cAACC,EAAA,EAAD,UAAYnC,EAAKW,aACjB,cAACwB,EAAA,EAAD,UAAYnC,EAAKc,UACjB,cAACqB,EAAA,EAAD,UAAYnC,EAAKU,YACjB,cAACyB,EAAA,EAAD,UAAYnC,EAAKY,WACjB,cAACuB,EAAA,EAAD,UAAYnC,EAAKa,YALI0B,EAAMC,wBAwBrCrD,qBAAU,WACR,IAAMsD,EAAU,uCAAG,WAAM1G,EAAGC,GAAT,eAAAjB,EAAA,sEACSe,EAASC,EAAGC,GADrB,OACX0G,EADW,OAEjBhE,GAAagE,GAFI,2CAAH,wDAIZ1G,EAAO2G,MAASC,OAAO,cAC3BH,EAAWtE,EAAanC,GACxB,IAAM6G,EAAWC,aAAY,kBAAML,EAAWtE,EAAanC,KAAO,MAC9D,OAAO,WACL+G,cAAcF,MAEnB,CAAC1E,IAEJ,IAqBM6E,GAAe,SAACC,GACpBjE,GAASiE,EAAMC,OAAOC,UAGlBC,GAAe,SAACC,KAIhBC,GAAgB,WACpBpE,IAAY,IA2Bd,OACE,sBAAKqE,UAAU,MAAf,UACE,sBAAKA,UAAW9F,EAAQV,QAAxB,UACE,8BACA,cAACqE,EAAA,EAAD,CAAYC,QAAQ,KAApB,iCAEA,sBAAKJ,MAAO,CAACvE,QAAQ,OAAOI,MAAO,OACvCI,OAAQ,OACRsG,eAAgB,eAChBC,SAAU,QAHN,UAIA,cAACC,EAAA,EAAD,CAAarC,QAAQ,WAAWkC,UAAW9F,EAAQnB,KAAnD,SACC+B,GACC,qCACA,cAACsF,EAAA,EAAD,CAAY1C,MAAO,CAACxE,IAAI,QAAxB,+BACA,cAACmH,EAAA,EAAD,CAAQvC,QAAQ,WACdkC,UAAW9F,EAAQZ,YACnBgH,MAAOhG,EACPiG,SA1EgB,SAACb,GACxBnF,EAAamF,EAAMC,OAAOW,OAC1B,IAAInI,EAAU2C,EAAU0F,MAAK,SAAA/D,GAAI,OAAEA,EAAKgE,aAAaf,EAAMC,OAAOW,SAAOI,SACzE/F,EAAaxC,IAwENwI,UAAW,CACTjD,MAAO,CAACxE,IAAI,OAAOS,OAAO,UAL9B,SASEmB,EAAUiE,KAAI,SAACtC,EAAKuC,GAAN,OACZ,cAAC4B,EAAA,EAAD,CAAUN,MAAO7D,EAAKgE,WAAtB,SAA0DhE,EAAKgE,YAAxBzB,EAAMC,sBAQnD,cAACkB,EAAA,EAAD,CACErC,QAAQ,WACRkC,UAAW9F,EAAQnB,KACnB8H,WAAUhE,IAAEY,QAAQzC,IAHtB,SAKE,qCACA,cAACoF,EAAA,EAAD,CAAY1C,MAAO,CAACxE,IAAI,QAAxB,kCACA,cAACmH,EAAA,EAAD,CAAQvC,QAAQ,WACdkC,UAAW9F,EAAQZ,YACnBgH,MAAO9F,EACP+F,SA7FmB,SAACb,GAC5BjF,EAAgBiF,EAAMC,OAAOW,OAC7B,IAAIQ,EAAa9F,GAAawF,MAAK,SAAA/D,GAAI,OAAGA,EAAKsE,gBAAgBrB,EAAMC,OAAOW,SAAOU,YACnFnG,EAAgBiG,GAChB3E,MA0FQwE,UAAW,CACTjD,MAAO,CAACxE,IAAI,OAAOS,OAAO,UAL9B,SASEqB,GAAa+D,KAAI,SAACtC,EAAKuC,GAAN,OACf,cAAC4B,EAAA,EAAD,CACEN,MAAO7D,EAAKsE,cADd,SAIGtE,EAAKsE,eAFD/B,EAAMC,sBASnB,cAACkB,EAAA,EAAD,CACErC,QAAQ,WACRkC,UAAW9F,EAAQnB,KACnB8H,WAAUhE,IAAEY,QAAQzC,IAHtB,SAKE,qCACA,cAACoF,EAAA,EAAD,CAAY1C,MAAO,CAACxE,IAAI,QAAxB,8BACA,eAACmH,EAAA,EAAD,CAAQvC,QAAQ,WACdkC,UAAW9F,EAAQZ,YACnBgH,MAAOlF,GACPmF,SAlHe,SAACb,GACxBrE,GAAcqE,EAAMC,OAAOW,QAkHnBK,UAAW,CACTjD,MAAO,CAACxE,IAAI,OAAOS,OAAO,UAL9B,UAQA,cAACiH,EAAA,EAAD,CAAUN,MAAO,QAAjB,oBACA,cAACM,EAAA,EAAD,CAAUN,MAAO,QAAjB,+BAKAzD,IAAEY,QAAQvC,KAAe2B,IAAEY,QAAQrC,IAAqD,KAAvC,qCAvGrD,sBAAKsC,MAAO,CAACC,UAAW,OAAQxE,QAAQ,QAAxC,UACA,cAAC8H,EAAA,EAAD,CACAX,MAAM,OACNtG,MAAM,UACNkH,cAAY,kBACZ3C,KAAK,SACLqB,QAASpE,GACT2F,QAAS1B,KAEX,cAAC5B,EAAA,EAAD,CAAYC,QAAQ,YAAYJ,MAAO,CAAChE,WAAW,OAAnD,SACI8B,GAA8B,mBAAlB,oBAEhB,cAAC4F,EAAA,EAAD,CAAYD,QAASpB,GAAerC,MAAO,CAACnE,MAAO,OACnDI,OAAQ,OACR0H,cAAe,QAFf,SAGE,cAACC,EAAA,EAAD,MAEF,cAACC,EAAA,EAAD,CAAQzD,QAAQ,UAAUqD,QAAStB,GAAcnC,MAAO,CAACvE,QAAQ,QAAjE,qCAsFuD,IAAoBgD,WAEzE,cAACqF,EAAA,EAAD,CACElG,KAAMA,GACNmG,aAAc,CAACC,SA5PN,SA4PgBC,WA5PU,UA6PnCC,QAAQ,kCACRC,OACE,cAACT,EAAA,EAAD,CAAYpH,MAAM,UAAUuE,KAAK,QAAQ4C,QAhI7B,WAClB5F,IAAQ,IA+HF,SACE,cAAC,IAAD,CAAWqC,SAAS,kBCrSjBkE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjK,MAAK,YAAkD,IAA/CkK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1G,SAAS2G,eAAe,SAM1BX,M","file":"static/js/main.53aa91ce.chunk.js","sourcesContent":["const URLStates = \"https://cdn-api.co-vin.in/api/v2/admin/location/states\";\r\n\r\nexport const getStates = async() =>{\r\n    const requestOptions={\r\n    method: \"GET\"\r\n}\r\n    const res = await fetch(URLStates,requestOptions);\r\n    if(res.ok)\r\n    {\r\n        return res.json().then(data=>{\r\n            return data.states;\r\n        })\r\n    }\r\n}\r\n\r\nexport const getDistricts = async(stateID)=>{\r\n    const requestOptions={\r\n        method: \"GET\"\r\n    }\r\n    const URLDistrictList = `https://cdn-api.co-vin.in/api/v2/admin/location/districts/`+stateID;\r\n    const results = await fetch(URLDistrictList,requestOptions);\r\n    if(results.ok)\r\n    {\r\n        return results.json().then(res=>{\r\n            return res.districts;\r\n        })\r\n    }\r\n}\r\n\r\nexport const getSlots = async(ID,date) => {\r\n    const requestOptions={\r\n        method: \"GET\"\r\n    };\r\n    const URL = `https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict?district_id=`+ID+`&date=`+date;\r\n    const results = await fetch(URL, requestOptions);\r\n    if(results.ok)\r\n    {\r\n        return results.json().then(res=>{\r\n            return res.centers;\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOTP = async(mobile) => {\r\n    let txnID=\"\";\r\n    const formData = {\r\n        \"mobile\": mobile\r\n    }\r\n    const requestOptions={\r\n        method: \"POST\",\r\n        headers:{\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(formData)\r\n    };\r\n    const URL = \"https://cdn-api.co-vin.in/api/v2/auth/public/generateOTP\";\r\n    const res = await fetch(URL,requestOptions);\r\n    if(res.ok)\r\n    {\r\n        return res.json().then(val=>{\r\n            console.log(\"OTP FETCH\",val);\r\n            txnID = val.txnId;\r\n        })\r\n    }\r\n    console.log(txnID);\r\n}\r\n","import './App.css';\nimport { Select, MenuItem, Typography, FormControl, makeStyles, Paper, TableRow, TableCell, Table, TableHead,TableBody, TableContainer, InputLabel, Snackbar, IconButton, Switch, Button} from \"@material-ui/core\";\nimport { useEffect, useState } from 'react';\nimport {getStates, getDistricts, getSlots} from \"./fetchAPI\";\nimport moment from \"moment\";\nimport _ from \"underscore\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ErrorIcon from '@material-ui/icons/Error';\nimport { WhatsappIcon} from \"react-share\";\n\nconst useStyles = makeStyles(theme=>({\n  root:{\n    margin: theme.spacing(1),\n    top:\"50px\",\n    display:\"flex\",\n    flexDirection:\"row\",\n    minWidth:\"fit-content\"\n  },\n  selectStyle:{\n    width:\"300px\"\n  },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    paddingTop: \"50px\",\n    height: \"85vh\"\n  },\n  colorCorrectAnswer:{\n    backgroundColor: \"#92F7BA\",\n    padding: \"15px\",\n    borderRadius: \"7px\",\n    color: \"#474747\"\n  },\n}))\nfunction App() {\n  const classes = useStyles();\n  let audio = new Audio(\"https://media.geeksforgeeks.org/wp-content/uploads/20190531135120/beep.mp3\");\n  const [stateName, setStateName] = useState(\"\");\n  const [districtName, setDistrictName] = useState(\"\");\n  const [stateCode, setStateCode] = useState(0);\n  const [districtCode, setDistrictCode] = useState(0);\n  const [stateList, setStateList] = useState([]);\n  const [districtList, setDistrictList] = useState([]);\n  const [slotsList, setSlotsList] = useState([]);\n  const [doseChoice, setDoseChoice] = useState(\"\");\n  const [open, setOpen] = useState(true);\n  const [toggleAudio, setAudio] = useState(true);\n  const [textMessageWhatsapp, setWhatsapp] = useState(false);\n  const vertical='bottom';const horizontal='center';\n\n  useEffect(()=>{\n    document.title = \"Cowin Slot Alert\"\n    async function fetchData(){\n      const listOfStates = await getStates();\n      setStateList(listOfStates);\n    }\n    fetchData();\n  }, []);\n\n  useEffect(()=>{\n    const fetchDistricts=async(ID)=>{\n      const listOfDistricts = await getDistricts(ID);\n      setDistrictList(listOfDistricts);\n    }\n    fetchDistricts(stateCode);\n  }, [stateCode]);\n\n  const shareMessageWhatsApp =(str)=>{\n    if(_.isEqual(textMessageWhatsapp,true))\n    {\n      window.open(\"https://api.whatsapp.com/send?text=\"+str);\n      setWhatsapp(false);\n    }\n  }\n\n  const displaySlots = () =>{\n    let centername; let sessions=[]; let freeSlots=[] ;\n    let whatsappMessage = \"\";\n    slotsList.forEach(item=>{\n      sessions = item.sessions;\n      sessions.forEach(val=>{\n        let dose = _.isEqual(doseChoice,\"dose1\") ? val.available_capacity_dose1 : val.available_capacity_dose2;\n        if(dose > 0)\n          {\n            centername = item.name;\n            let obj={openSlots:0,centerName:\"\",slotDate:\"\",vaccine:\"\",pincode:\"\"};\n            obj.openSlots = dose;\n            obj.centerName = centername;\n            obj.slotDate = val.date;\n            obj.vaccine = val.vaccine;\n            obj.pincode = item.pincode;\n            whatsappMessage += `\\nCenter Name:`+centername\n            +`  Slots: `+ dose+ \n            `  Date: `+val.date+ \n            `  Vaccine Name: `+val.vaccine+\n            `  Pincode: `+item.pincode+`%0a%0a`;\n            freeSlots.push(obj);\n          }\n      })\n    })\n    if(!_.isEmpty(freeSlots)){\n      toggleAudio && audio.play();\n      textMessageWhatsapp && shareMessageWhatsApp(whatsappMessage);\n      return(\n        <TableContainer component={Paper} style={{\n          width: \"80vw\",\n          height: \"auto\",\n          opacity: \"0.87\",\n          overflow: \"auto\"}}>\n        <Table size=\"medium\" stickyHeader aria-label=\"sticky table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Center Name</TableCell>\n            <TableCell align=\"left\">Pin Code&nbsp;</TableCell>\n            <TableCell align=\"left\">Open Slots</TableCell>\n            <TableCell align=\"left\">Slot Dates&nbsp;</TableCell>\n            <TableCell align=\"left\">Vaccine&nbsp;</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        {freeSlots.map((item,index)=>{\n          return (<TableRow key={index.toString()}>\n            <TableCell>{item.centerName}</TableCell>\n            <TableCell>{item.pincode}</TableCell>\n            <TableCell>{item.openSlots}</TableCell>\n            <TableCell>{item.slotDate}</TableCell>\n            <TableCell>{item.vaccine}</TableCell>\n            </TableRow>\n          )\n        })\n      }\n        </TableBody>\n      </Table>\n      </TableContainer>\n      )\n    }\n    else\n    return (\n      <div style={{display:\"flex\",marginTop: \"100px\"}}>\n        <ErrorIcon fontSize=\"medium\" style={{width:\"4.5rem\" ,height:\"2.5rem\", color:\"crimson\"}}/>\n        <Typography variant=\"h4\">No Slots Found</Typography>\n    </div>\n    )\n  }\n\n  useEffect(()=>{\n    const fetchSlots = async(ID,date) => {\n      const listOfSlots = await getSlots(ID,date);\n      setSlotsList(listOfSlots);\n    }\n    let date = moment().format('DD-MM-YYYY');\n    fetchSlots(districtCode,date);\n    const interval = setInterval(() => fetchSlots(districtCode,date), 15000)\n        return () => {\n          clearInterval(interval);\n        }\n  }, [districtCode]);\n\n  const handleStateSelect = (event) =>{\n     setStateName(event.target.value);\n     let stateID = stateList.find(item=>item.state_name===event.target.value).state_id;\n     setStateCode(stateID);\n  }\n\n  const handleDistrictSelect = (event) => {\n    setDistrictName(event.target.value);\n    let districtID = districtList.find(item=> item.district_name===event.target.value).district_id;\n    setDistrictCode(districtID);\n    displaySlots();\n  }\n\n  const handleDoseSelect = (event) => {\n    setDoseChoice(event.target.value);\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  const handleToggle = (event) => {\n    setAudio(event.target.checked)\n  }\n\n  const downloadCert = (e) => {\n    //getOTP(); give cell number here\n  }\n\n  const shareWhatsApp = () => {\n    setWhatsapp(true);\n  }\n\n  const renderSwitch = () => {\n    return (\n      <div style={{marginTop: \"55px\", display:\"flex\"}}>\n      <Switch \n      value=\"true\"\n      color=\"primary\"\n      data-testid=\"toggleFilmStrip\"\n      size=\"medium\"\n      checked={toggleAudio}\n      onClick={handleToggle}\n    />\n    <Typography variant=\"subtitle1\" style={{paddingTop:\"7px\"}}>\n      {!toggleAudio?\"Switch Audio ON\":\"Switch Audio OFF\"}\n    </Typography>\n    <IconButton onClick={shareWhatsApp} style={{width: \"50px\",\n    height: \"50px\",\n    paddingBottom: \"19px\"}}>\n      <WhatsappIcon />\n    </IconButton>\n    <Button variant=\"primary\" onClick={downloadCert} style={{display:\"none\"}}>DownLoad Certificate</Button>\n    </div>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <div className={classes.wrapper}>\n        <div>\n        <Typography variant=\"h3\">Cowin Slot Finder</Typography>\n        </div>\n        <div style={{display:\"flex\",width: \"80vw\",\n    height: \"auto\",\n    justifyContent: \"space-around\",\n    flexWrap: \"wrap\"}}>\n        <FormControl variant=\"outlined\" className={classes.root}>\n        {stateList && (\n          <>\n          <InputLabel style={{top:\"-6px\"}}>Select your state</InputLabel>\n          <Select variant=\"outlined\" \n            className={classes.selectStyle} \n            value={stateName} \n            onChange={handleStateSelect}\n            MenuProps={{\n              style: {top:\"50px\",height:\"350px\"}\n            }}\n          >\n          {\n            stateList.map((item,index)=>(\n              <MenuItem value={item.state_name} key={index.toString()}>{item.state_name}</MenuItem>\n            ))\n          }\n        </Select>\n        </>\n        )\n        }\n        </FormControl>\n        <FormControl \n          variant=\"outlined\" \n          className={classes.root}\n          disabled={_.isEmpty(districtList)?true:false}\n        >\n          <>\n          <InputLabel style={{top:\"-6px\"}}>Select your district</InputLabel>\n          <Select variant=\"outlined\" \n            className={classes.selectStyle} \n            value={districtName} \n            onChange={handleDistrictSelect}\n            MenuProps={{\n              style: {top:\"50px\",height:\"350px\"}\n            }}\n          >\n          {\n            districtList.map((item,index)=>(\n              <MenuItem \n                value={item.district_name} \n                key={index.toString()}\n              >\n                {item.district_name}\n              </MenuItem>\n            ))\n          }\n        </Select>\n        </>\n        </FormControl>\n        <FormControl \n          variant=\"outlined\" \n          className={classes.root}\n          disabled={_.isEmpty(districtList)?true:false}\n        >\n          <>\n          <InputLabel style={{top:\"-6px\"}}>Select your dose</InputLabel>\n          <Select variant=\"outlined\" \n            className={classes.selectStyle} \n            value={doseChoice} \n            onChange={handleDoseSelect}\n            MenuProps={{\n              style: {top:\"50px\",height:\"350px\"}\n            }}\n          >\n          <MenuItem value={'dose1'}>DOSE 1</MenuItem>\n          <MenuItem value={'dose2'}>DOSE 2</MenuItem>\n        </Select>\n        </>\n        </FormControl>\n        </div>\n        {!_.isEmpty(slotsList) && !_.isEmpty(doseChoice) ? <>{renderSwitch()} {displaySlots()}</>:null}\n      </div>\n      <Snackbar\n        open={open}\n        anchorOrigin={{vertical, horizontal}}\n        message=\"Data is polled every 30 seconds\"\n        action={\n          <IconButton color=\"inherit\" size=\"small\" onClick={handleClose}>\n            <CloseIcon fontSize=\"small\"/>\n          </IconButton>\n        }\n      >\n      </Snackbar>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}