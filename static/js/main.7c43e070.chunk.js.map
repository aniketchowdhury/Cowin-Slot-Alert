{"version":3,"sources":["fetchAPI.js","App.js","reportWebVitals.js","index.js"],"names":["getStates","a","requestOptions","method","fetch","res","ok","json","then","data","console","log","states","getDistricts","stateID","URLDistrictList","results","districts","getSlots","ID","date","URL","centers","useStyles","makeStyles","theme","root","margin","spacing","top","display","flexDirection","minWidth","selectStyle","width","wrapper","alignItems","paddingTop","height","colorCorrectAnswer","backgroundColor","padding","borderRadius","color","App","classes","audio","Audio","useState","stateName","setStateName","districtName","setDistrictName","stateCode","setStateCode","districtCode","setDistrictCode","stateList","setStateList","districtList","setDistrictList","slotsList","setSlotsList","doseChoice","setDoseChoice","open","setOpen","toggleAudio","setAudio","useEffect","listOfStates","document","title","fetchData","listOfDistricts","fetchDistricts","displaySlots","centername","freeSlots","forEach","item","sessions","val","dose","_","isEqual","available_capacity_dose1","available_capacity_dose2","name","obj","openSlots","centerName","slotDate","vaccine","pincode","push","isEmpty","style","marginTop","fontSize","Typography","variant","play","TableContainer","component","Paper","opacity","overflowY","Table","size","stickyHeader","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","index","toString","fetchSlots","listOfSlots","moment","format","interval","setInterval","clearInterval","handleToggle","event","target","checked","className","FormControl","InputLabel","Select","value","onChange","find","state_name","state_id","MenuProps","MenuItem","districtID","district_name","district_id","Switch","data-testid","onClick","Snackbar","anchorOrigin","vertical","horizontal","message","action","IconButton","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7c43e070.chunk.js","sourcesContent":["const URLStates = \"https://cdn-api.co-vin.in/api/v2/admin/location/states\";\r\n\r\nexport const getStates = async() =>{\r\n    const requestOptions={\r\n    method: \"GET\"\r\n}\r\n    const res = await fetch(URLStates,requestOptions);\r\n    if(res.ok)\r\n    {\r\n        return res.json().then(data=>{\r\n            console.log(data.states);\r\n            return data.states;\r\n        })\r\n    }\r\n}\r\n\r\nexport const getDistricts = async(stateID)=>{\r\n    const requestOptions={\r\n        method: \"GET\"\r\n    }\r\n    const URLDistrictList = `https://cdn-api.co-vin.in/api/v2/admin/location/districts/`+stateID;\r\n    const results = await fetch(URLDistrictList,requestOptions);\r\n    if(results.ok)\r\n    {\r\n        return results.json().then(res=>{\r\n            console.log(res.districts);\r\n            return res.districts;\r\n        })\r\n    }\r\n}\r\n\r\nexport const getSlots = async(ID,date) => {\r\n    const requestOptions={\r\n        method: \"GET\"\r\n    };\r\n    const URL = `https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict?district_id=`+ID+`&date=`+date;\r\n    const results = await fetch(URL, requestOptions);\r\n    if(results.ok)\r\n    {\r\n        return results.json().then(res=>{\r\n            return res.centers;\r\n        })\r\n    }\r\n}\r\n","import './App.css';\nimport { Select, MenuItem, Typography, FormControl, makeStyles, Paper, TableRow, TableCell, Table, TableHead,TableBody, TableContainer, InputLabel, Snackbar, IconButton, Switch} from \"@material-ui/core\";\nimport { useEffect, useState } from 'react';\nimport {getStates, getDistricts, getSlots} from \"./fetchAPI\";\nimport moment from \"moment\";\nimport _ from \"underscore\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ErrorIcon from '@material-ui/icons/Error';\n\nconst useStyles = makeStyles(theme=>({\n  root:{\n    margin: theme.spacing(1),\n    top:\"50px\",\n    display:\"flex\",\n    flexDirection:\"row\",\n    minWidth:\"fit-content\"\n  },\n  selectStyle:{\n    width:\"300px\"\n  },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    paddingTop: \"50px\",\n    height: \"85vh\"\n  },\n  colorCorrectAnswer:{\n    backgroundColor: \"#92F7BA\",\n    padding: \"15px\",\n    borderRadius: \"7px\",\n    color: \"#474747\"\n  },\n}))\nfunction App() {\n  const classes = useStyles();\n  let audio = new Audio(\"https://media.geeksforgeeks.org/wp-content/uploads/20190531135120/beep.mp3\");\n  const [stateName, setStateName] = useState(\"\");\n  const [districtName, setDistrictName] = useState(\"\");\n  const [stateCode, setStateCode] = useState(0);\n  const [districtCode, setDistrictCode] = useState(0);\n  const [stateList, setStateList] = useState([]);\n  const [districtList, setDistrictList] = useState([]);\n  const [slotsList, setSlotsList] = useState([]);\n  const [doseChoice, setDoseChoice] = useState(\"\");\n  const [open, setOpen] = useState(true);\n  const [toggleAudio, setAudio] = useState(true);\n  const vertical='bottom';const horizontal='center';\n\n  useEffect(()=>{\n    document.title = \"Cowin Slot Alert\"\n    async function fetchData(){\n      const listOfStates = await getStates();\n      setStateList(listOfStates);\n    }\n    fetchData();\n  }, []);\n\n  useEffect(()=>{\n    const fetchDistricts=async(ID)=>{\n      const listOfDistricts = await getDistricts(ID);\n      setDistrictList(listOfDistricts);\n    }\n    fetchDistricts(stateCode);\n  }, [stateCode]);\n\n  const displaySlots = ()=>{\n    let centername; let sessions=[]; let freeSlots=[] ;\n    slotsList.forEach(item=>{\n      sessions = item.sessions;\n      sessions.forEach(val=>{\n        let dose = _.isEqual(doseChoice,\"dose1\") ? val.available_capacity_dose1 : val.available_capacity_dose2;\n        if(dose > 0)\n          {\n            centername = item.name;\n            let obj={openSlots:0,centerName:\"\",slotDate:\"\",vaccine:\"\",pincode:\"\"};\n            obj.openSlots = dose;\n            obj.centerName = centername;\n            obj.slotDate = val.date;\n            obj.vaccine = val.vaccine;\n            obj.pincode = item.pincode;\n            freeSlots.push(obj);\n          }\n      })\n    })\n    if(!_.isEmpty(freeSlots)){\n      toggleAudio && audio.play();\n      return(\n        <TableContainer component={Paper} style={{\n          width: \"680px\",\n          height: \"400px\",\n          opacity: \"0.87\",\n          overflowY: \"auto\"}}>\n        <Table size=\"medium\" stickyHeader aria-label=\"sticky table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Center Name</TableCell>\n            <TableCell align=\"left\">Pin Code&nbsp;</TableCell>\n            <TableCell align=\"left\">Open Slots</TableCell>\n            <TableCell align=\"left\">Slot Dates&nbsp;</TableCell>\n            <TableCell align=\"left\">Vaccine&nbsp;</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        {freeSlots.map((item,index)=>{\n          return (<TableRow key={index.toString()}>\n            <TableCell>{item.centerName}</TableCell>\n            <TableCell>{item.pincode}</TableCell>\n            <TableCell>{item.openSlots}</TableCell>\n            <TableCell>{item.slotDate}</TableCell>\n            <TableCell>{item.vaccine}</TableCell>\n            </TableRow>\n          )\n        })\n      }\n        </TableBody>\n      </Table>\n      </TableContainer>\n      )\n    }\n    else\n    return (\n      <div style={{display:\"flex\",marginTop: \"100px\"}}>\n        <ErrorIcon fontSize=\"medium\" style={{width:\"4.5rem\" ,height:\"2.5rem\", color:\"crimson\"}}/>\n        <Typography variant=\"h4\">No Slots Found</Typography>\n    </div>\n    )\n  }\n\n  useEffect(()=>{\n    const fetchSlots = async(ID,date) => {\n      const listOfSlots = await getSlots(ID,date);\n      setSlotsList(listOfSlots);\n    }\n    let date = moment().format('DD-MM-YYYY');\n    fetchSlots(districtCode,date);\n    const interval = setInterval(() => fetchSlots(districtCode,date), 15000)\n        return () => {\n          clearInterval(interval);\n        }\n  }, [districtCode]);\n\n  const handleStateSelect = (event) =>{\n     setStateName(event.target.value);\n     let stateID = stateList.find(item=>item.state_name===event.target.value).state_id;\n     setStateCode(stateID);\n  }\n\n  const handleDistrictSelect = (event) => {\n    setDistrictName(event.target.value);\n    let districtID = districtList.find(item=> item.district_name===event.target.value).district_id;\n    setDistrictCode(districtID);\n    displaySlots();\n  }\n\n  const handleDoseSelect = (event) => {\n    setDoseChoice(event.target.value);\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  const handleToggle = (event) => {\n    setAudio(event.target.checked)\n  }\n\n  const renderSwitch = () => {\n    return (\n      <div style={{marginTop: \"55px\", display:\"flex\"}}>\n      <Switch \n      value=\"true\"\n      color=\"primary\"\n      data-testid=\"toggleFilmStrip\"\n      size=\"medium\"\n      checked={toggleAudio}\n      onClick={handleToggle}\n    />\n    <Typography style={{paddingTop:\"7px\"}}>\n      {!toggleAudio?\"Switch Audio ON\":\"Switch Audio OFF\"}\n    </Typography>\n    </div>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <div className={classes.wrapper}>\n        <div>\n        <Typography variant=\"h3\">Cowin Slot Finder</Typography>\n        </div>\n        <div style={{display:\"flex\"}}>\n        <FormControl variant=\"outlined\" className={classes.root}>\n        {stateList && (\n          <>\n          <InputLabel style={{top:\"-6px\"}}>Select your state</InputLabel>\n          <Select variant=\"outlined\" \n            className={classes.selectStyle} \n            value={stateName} \n            onChange={handleStateSelect}\n            MenuProps={{\n              style: {top:\"50px\",height:\"350px\"}\n            }}\n          >\n          {\n            stateList.map((item,index)=>(\n              <MenuItem value={item.state_name} key={index.toString()}>{item.state_name}</MenuItem>\n            ))\n          }\n        </Select>\n        </>\n        )\n        }\n        </FormControl>\n        <FormControl variant=\"outlined\" className={classes.root}>\n        {stateName && districtList && (\n          <>\n          <InputLabel style={{top:\"-6px\"}}>Select your district</InputLabel>\n          <Select variant=\"outlined\" \n            className={classes.selectStyle} \n            value={districtName} \n            onChange={handleDistrictSelect}\n            MenuProps={{\n              style: {top:\"50px\",height:\"350px\"}\n            }}\n          >\n          {\n            districtList.map((item,index)=>(\n              <MenuItem \n                value={item.district_name} \n                key={index.toString()}\n              >\n                {item.district_name}\n              </MenuItem>\n            ))\n          }\n        </Select>\n        </>\n        )\n        }\n        </FormControl><FormControl variant=\"outlined\" className={classes.root}>\n        {stateName && districtList && (\n          <>\n          <InputLabel style={{top:\"-6px\"}}>Select your dose</InputLabel>\n          <Select variant=\"outlined\" \n            className={classes.selectStyle} \n            value={doseChoice} \n            onChange={handleDoseSelect}\n            MenuProps={{\n              style: {top:\"50px\",height:\"350px\"}\n            }}\n          >\n          <MenuItem value={'dose1'}>DOSE 1</MenuItem>\n          <MenuItem value={'dose2'}>DOSE 2</MenuItem>\n        </Select>\n        </>\n        )\n        }\n        </FormControl>\n        </div>\n        {!_.isEmpty(slotsList) && !_.isEmpty(doseChoice) ? <>{renderSwitch()} {displaySlots()}</>:null}\n      </div>\n      <Snackbar\n        open={open}\n        anchorOrigin={{vertical, horizontal}}\n        message=\"Data is polled every 30 seconds\"\n        action={\n          <IconButton color=\"inherit\" size=\"small\" onClick={handleClose}>\n            <CloseIcon fontSize=\"small\"/>\n          </IconButton>\n        }\n      >\n      </Snackbar>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}